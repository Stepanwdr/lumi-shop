/*
  GUIDE
  https://github.com/typescript-eslint/typescript-eslint/blob/master/docs/getting-started/linting/README.md

  REACT
  https://github.com/yannickcr/eslint-plugin-react

  REACT-HOOKS
  https://github.com/facebook/react/tree/main/packages/eslint-plugin-react-hooks

  TYPESCRIPT
  https://robertcooper.me/post/using-eslint-and-prettier-in-a-typescript-project

  PRETTIER
  https://github.com/prettier/eslint-config-prettier/blob/main/CHANGELOG.md#version-800-2021-02-21
  Uses the recommended rules from the @typescript-eslint/eslint-plugin
  Uses eslint-config-prettier to disable ESLint rules from @typescript-eslint/eslint-plugin that would conflict with prettierEnables eslint-plugin-prettier and eslint-config-prettier.
  This will display prettier errors as ESLint errors. Make sure this is always the last configuration in the extends array.

  SIMPLE-IMPORT-SORT
  https://www.npmjs.com/package/eslint-plugin-simple-import-sort

  GROUPED-IMPORT
  https://github.com/import-js/eslint-plugin-import
*/

{
  "ignorePatterns": [
    "README.md",
    "public/~partytown/*",
    "public/for-clubs/**/*",
    "public/corporations/**/*"
  ],
  "parser": "@typescript-eslint/parser",
  "extends": [
    "eslint:recommended",
    "plugin:react/recommended",
    "plugin:react-hooks/recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:react/jsx-runtime",
    "next/core-web-vitals",
    "plugin:import/recommended",
    "prettier"
  ],
  "settings": {
    "react": {
      "version": "detect"
    }
  },
  "env": {
    "browser": true,
    "node": true,
    "es6": true
  },
  "plugins": [
    "@typescript-eslint",
    "react",
    "react-hooks",
    "simple-import-sort"
  ],
  "rules": {
    /* Общие правила */
    "no-console": "error",
    "no-nested-ternary": "error",
    "react/jsx-curly-brace-presence": [
      "error",
      { "props": "always", "children": "never" }
    ],

    /* Правила работы с React */
    "react/prop-types": "off",
    "react/jsx-curly-spacing": "off",
    "react/jsx-uses-react": "off",
    "react/react-in-jsx-scope": "off",
    "react/no-array-index-key": "warn",
    "react/boolean-prop-naming": "error",
    "react/display-name": ["off", { "ignoreTranspilerName": true }],
    "react/destructuring-assignment": ["error", "always"],
    "react/jsx-boolean-value": "error",
    "react/jsx-fragments": ["error", "element"],
    "react/jsx-handler-names": "error",
    "react/jsx-sort-props": [
      2,
      {
        "callbacksLast": true,
        "multiline": "last",
        "noSortAlphabetically": false
      }
    ],
    "import/no-restricted-paths": [
      "error",
      {
        "zones": [
          // processes
          {
            "target": "src/processes",
            "from": "src/application"
          },
          // Cross import
          {
            "target": "src/processes/*/**/*",
            "from": "src/processes/*/index.ts"
          },

          // pages
          {
            "target": "src/views",
            "from": "src/application"
          },
          {
            "target": "src/views",
            "from": "src/processes"
          },
          // Cross import
          {
            "target": "src/views/*/**/*",
            "from": "src/views/*/index.ts"
          },

          // widgets
          {
            "target": "src/widgets",
            "from": "src/application"
          },
          {
            "target": "src/widgets",
            "from": "src/processes"
          },
          {
            "target": "src/widgets",
            "from": "src/views"
          },
          // Cross import
          {
            "target": "src/widgets/*/**/*",
            "from": "src/widgets/*/index.ts"
          },
          // features
          {
            "target": "src/features",
            "from": "src/application"
          },
          {
            "target": "src/features",
            "from": "src/processes"
          },
          {
            "target": "src/features",
            "from": "src/views"
          },
          {
            "target": "src/features",
            "from": "src/widgets"
          },
          // Cross import
          {
            "target": "src/features/*/**/*",
            "from": "src/features/*/index.ts"
          },

          // entities
          {
            "target": "src/entities",
            "from": "src/application"
          },
          {
            "target": "src/entities",
            "from": "src/processes"
          },
          {
            "target": "src/entities",
            "from": "src/views"
          },
          {
            "target": "src/entities",
            "from": "src/widgets"
          },
          {
            "target": "src/entities",
            "from": "src/features"
          },
          // Cross import
          {
            "target": "src/entities/*/**/*",
            "from": "src/entities/*/index.ts"
          },

          // shared
          {
            "target": "src/shared",
            "from": "src/application"
          },
          {
            "target": "src/shared",
            "from": "src/processes"
          },
          {
            "target": "src/shared",
            "from": "src/views"
          },
          {
            "target": "src/shared",
            "from": "src/widgets"
          },
          {
            "target": "src/shared",
            "from": "src/features"
          },
          {
            "target": "src/shared",
            "from": "src/entities"
          }
        ]
      }
    ],

    /* Правила работы с TypeScript */
    "@typescript-eslint/explicit-function-return-type": "off",
    "@typescript-eslint/explicit-module-boundary-types": "off",
    "@typescript-eslint/no-empty-interface": "off",
    "@typescript-eslint/no-non-null-assertion": "off",
    "@typescript-eslint/ban-ts-comment": "off",
    "@typescript-eslint/no-explicit-any": "warn",
    "@typescript-eslint/no-unused-vars": [
      "warn",
      {
        "argsIgnorePattern": "^_",
        "varsIgnorePattern": "^_",
        "caughtErrorsIgnorePattern": "^_"
      }
    ],

    //sort imports
    "simple-import-sort/imports": [
      "error",
      {
        "groups": [
          ["^react"],
          ["^next"],
          ["^@*"],
          ["^@application"],
          ["^@views"],
          ["^@widgets"],
          ["^@features"],
          ["^@entities"],
          ["^@shared"],
          ["^\\.\\.(?!/?$)", "^\\.\\./?$"],
          ["^\\./(?=.*/)(?!/?$)", "^\\.(?!/?$)", "^\\./?$"],
          ["^.+\\.?(css)$"]
        ]
      }
    ],
    "simple-import-sort/exports": "error"
  }
}
